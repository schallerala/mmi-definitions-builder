exl
exl:DFAForReg1
(Example 2.13. fromHU79.)
Find a regular expression for the language accepted by the automaton on Figure fig:DFAForReg1.
figure[ht]
center

center
Automaton for Example exl:DFAForReg1.
fig:DFAForReg1
figure

One fills the table in Figure fig:TableRegExp column after column according to the above algorithm.

figure[ht]
center
tabularcccc
&  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 

 &  &  & 
tabular
center
Finding a regular expression for Example exl:DFAForReg1.
fig:TableRegExp
figure

The first column is easy.
For the second and the third column use the recursive formula.
Sometimes a regular expression can be simplified, and this was done at several places in this table.
For example,

r_22^1 = r_22^0 + r_21^0(r_11^0)^*r_12^0 = + 0()^*0 = + 00.

More interesting things happen to , which by the direct application of the recursive formula is equal to

r_13^2 = r_12^1(r_22^1)^*r_23^1 + r_13^1 = 1+ 0(+ 00)^*(1+01).

Because of  and  this can be rewritten as

r_13^2 = 1 + 0(00)^*(+ 0)1.

Further, one has , so that

r_13^2 = 1 + 00^*1 = 0^*1.

A regular expression for the language accepted by this automaton is .
Each of the summands is a lengthy expression. After some simplifications one obtains

r = 0^*1((0+1)0^*1)^*(+(0+1)(00)^*) + 0(00)^*.


It should be noted that one does not need all of the table fig:TableRegExp to compute the expression .
exl