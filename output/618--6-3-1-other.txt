proof
We have an algorithm which converts a regular expression into a finite automaton.
Therefore it suffices to find an algorithm for the equivalence of finite automata.

Given two finite automata  and , let  and .
By Theorem thm:ClosRegLang, the symmetric difference

L_1 L_2 = (L_1 L_2) (L_2 L_1)

is a regular language.
Thus there is a finite automaton  that accepts the language .
One has

L_1 = L_2 L_1 L_2 = .

Therefore it suffices to decide whether the language accepted by  is empty.
The language is empty if and only if from the initial state no final state can be reached.
This is easy to check algorithmically.
proof



