

Using relation eqn:RecNK, one can compute the entries of the table  recursively.
First, one fills the row  and the column  with ones.
Then, one can fill the table row after row or column after column.
One should observe that for  one has .
If one goes column after column, then in order to fill the column for 
one marks the diagonal  and computes the -entry as the sum of the entry immediately above it
and the entry on the intersection of the current row and the marked diagonal.

center
tabularrrrrrrrr
n & 0 & 1 & 2 & 3 & 4 & 5 & 6

1 & 1 & 1 & 1 & 1 & 1 & 1 & 1

2 & 1 & 1 & 2 & 2 & 3 & 3 & 4

3 & 1 & 1 & 2 & 3 & 4 & 5 & 7

4 & 1 & 1 & 2 & 3 & 5 & 6 & 9

5 & 1 & 1 & 2 & 3 & 5 & 7 & 10

6 & 1 & 1 & 2 & 3 & 5 & 7 & 11
tabular
center

There is a recurrence which allows a much faster computation of the number of partitions.
