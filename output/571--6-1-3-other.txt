(Recall that  denotes the set of all subsets of .)

As next, we need to describe how an NFA works, that is what words does it accept.
Informally speaking, an NFA can be in several states at the same time, and when an input symbol is read, each of these states generates a new set of states.
The number of current states does not necessarily increase with each step, because for some input there may be no transition defined from some states:
some branches die off.
In a more dramatic way this can be imagined as creation of parallel universes when the transition is not uniquely defined
and an apokalypsis in a given universe if the transition for a given input symbol is undefined.

Formally, we define an extended transition function recursively as
enumerate
;
.
enumerate

Now, a word  is considered accepted by an NFA if there is a sequence of transitions corresponding to the input 
that ends up in a final state.
(That is, a word is accepted if it is accepted in at least one of the parallel universes.)

Formally, we define the language accepted by a non-deterministic automaton  as
equation
eqn:NFALanguage
L(M) = w ^* (q_0, w) F .
equation
